# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: exchange.proto

require 'google/protobuf'


descriptor_data = "\n\x0e\x65xchange.proto\x12\x08\x65xchange\"5\n\x16GetExchangeRateRequest\x12\x0c\n\x04\x62\x61se\x18\x01 \x01(\t\x12\r\n\x05quote\x18\x02 \x01(\t\"\'\n\x17GetExchangeRateResponse\x12\x0c\n\x04rate\x18\x01 \x01(\x03\x32\xc9\x01\n\x0f\x45xchangeService\x12V\n\x0fGetExchangeRate\x12 .exchange.GetExchangeRateRequest\x1a!.exchange.GetExchangeRateResponse\x12^\n\x15GetExchangeRateStream\x12 .exchange.GetExchangeRateRequest\x1a!.exchange.GetExchangeRateResponse0\x01\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Exchange
  GetExchangeRateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("exchange.GetExchangeRateRequest").msgclass
  GetExchangeRateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("exchange.GetExchangeRateResponse").msgclass
end
